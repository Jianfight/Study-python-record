习题3：
 + 加号（plus）加法运算
 -减号（minus）减法运算
 /斜杠（slash）除法运算 在进行除法运算时（Python2中）整数与整数相除只会显示结果的整数位，小数位不会显示，但当被除数或除数中有一个为浮点数时，计算结果就会为浮点数。
 *星号（asterisk）乘法运算
 %百分号（percent）求余数
 <小于号（less-than）
 >大于号（greater-than）
 <=小于等于号（less-than-equal）
 >=大于等于号（greater-than-equal）
 == 等于号（equal） 在python中 = 是用来进行赋值的
 <>不等于号 != 

习题5：
  格式化字符
%r 全部打印出来
%c 字符及其ASCALL码
%s 字符串
%d 有符号整数（十进制）
%u 无符号整数（十进制）
%f 浮点数（用小数点表示）%.xf x表示小数需要保留的位数
%e 浮点数（科学计数法）
%E 浮点数（科学计数法，用E代替e）
%g 浮点数（根据值的大小采用%e或者%f）
在输出时在%和d之间加入数字表示添加相应个数的占位符（想用0代替空白占位符在加入的数字前添加0），在数字前添加-表示输出数字左对齐。

%o 无符号整数（八进制）
%x 无符号整数（十六进制）
%X 无符号整数（十六进制大写字符）
%p 指针（用十六进制打印值的内存地址）

习题6：
在print时可以使用 + 连接两个变量或者多个变量。

习题7：
  在相邻的两个print 输出中，在第一个结尾添加“，”可以将两个文本连接起来

习题9：
  让字符串扩展到多行的方法,在需要新起一行的字符串之前加上 \n；使用三引号""" """之间可以放入任意多行的文字。

习题10：
  转义序列
\\ 反斜杠
\' 单引号
\" 双引号
\a 相令符
\b 退格符
\n 换行符
\r 回车符
\t 水平制表符
\v 垂直制表符
\f 进纸符

\N(name) Unicode 数据库中的字符名，其中 name 就是它的名字
\uxxxx 值为16位十六进制xxxx的字符
\Uxxxxxxxx 值为32位十六进制xxxx的字符
\ooo 值为八进制值ooo的字符
\xhh 值为十六进制数hh的字符

习题11：
 raw_input () 函数是返回用户输入的字符串
 input （） 函数是将用户输入的字符串变为python的表达式并且可以按照表达式进行计算，返回的是整型或者浮点型，其可以看作是将 raw_input和eval的结合。与eval相对应的为repr函数，其为将变量或者是表达式转换为字符串。
 转化为整形使用的函数为 int() 转化为浮点型的函数为float（）

习题12：
在window中  python -m pydoc xxxx 是以一种在命令终端之中查询xxxx是什么作用的一种方法，有时解释过长时 可以输入q来停止解释。

习题15：
python中的open 函数
 open(name,[,mode[,buffering]])  文件名是必须的，模式和缓冲参数是可选的
 r 为读模式，w 为写模式，a为追加模式，b 为二进制模式，+ 为读/写模式。如果不做说明一般情况下系统迷人的是读
 例如 a = open(a.txt, 'r')             a = open(a.txt, 'w')
      a.read()      # 读全部文件       a.write('abcdefghijklmn')
      a.readline()   #逐行的读文件     a.close()   # 调用close方法关闭文件，有打开就需要有关闭
      a.close                          a.truncate   #清空文件 

习题17：
 len()函数返回字符串长度。    在widows下的type命令是显示文件内容的。

习题18：
定义函数的注意事项：

1.函数定义是以 def 开始的吗？
2.函数名称是以字符和下划线_组成的吗？（可以有数字，但是数字不要出现在函数名称的开头）
3.函数名称是不是紧跟着括号（ ？
4.括号里是否包含参数？多个参数是否以逗号隔开？
5.参数名称是否有重复？（不能使用重复的参数名）
6.紧跟着参数的是不是括号和冒号 ）：？
7.紧跟着函数定义的代码是否使用了4个空格的缩进（indent）？
8.函数结束的位置是否取消了缩进（dedent）？

当运行（run）/调用(call)/使用（use）一个函数时，需要检查的有：

1.调用函数时是否使用了函数的名称？
2.函数的名称是否紧跟着（ ？
3.括号后有无参数？多个参数是否以逗号隔开？
4.函数是否以 ）结尾？

习题20：
 当我们在读取文件的时候，使用read命令，在读取结束后，读取指针将会位于文件的末尾，如果我们需要再次读取文件，应该使用seek命令将读取指针调回到文件的开头，否则我们读取的为空。
 使用readline时，在读完一行时，读取指针会位于改行的末尾，当再使用reading命令时，将会从下一行读起。
 f.seek(offset[, whence])  offset--开始的偏移量，代表需要移动偏移的字节数。
                           whence--默认值为0，表示从哪个位置开始偏移，0代表从文件开头，1代表从文件当前位置开始算起，2代表从文件末尾算起。
 +=符号的作用：其作用类似于a = a + 1 可以简写为： a += 1
在 Windows powershell 中可以使用 get-content 查看文本文件。